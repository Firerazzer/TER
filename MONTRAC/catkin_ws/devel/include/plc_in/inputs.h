// Generated by gencpp from file plc_in/inputs.msg
// DO NOT EDIT!


#ifndef PLC_IN_MESSAGE_INPUTS_H
#define PLC_IN_MESSAGE_INPUTS_H

#include <ros/service_traits.h>


#include <plc_in/inputsRequest.h>
#include <plc_in/inputsResponse.h>


namespace plc_in
{

struct inputs
{

typedef inputsRequest Request;
typedef inputsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct inputs
} // namespace plc_in


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::plc_in::inputs > {
  static const char* value()
  {
    return "6c3d38f17dcca133524ecb0488107900";
  }

  static const char* value(const ::plc_in::inputs&) { return value(); }
};

template<>
struct DataType< ::plc_in::inputs > {
  static const char* value()
  {
    return "plc_in/inputs";
  }

  static const char* value(const ::plc_in::inputs&) { return value(); }
};


// service_traits::MD5Sum< ::plc_in::inputsRequest> should match 
// service_traits::MD5Sum< ::plc_in::inputs > 
template<>
struct MD5Sum< ::plc_in::inputsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::plc_in::inputs >::value();
  }
  static const char* value(const ::plc_in::inputsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::plc_in::inputsRequest> should match 
// service_traits::DataType< ::plc_in::inputs > 
template<>
struct DataType< ::plc_in::inputsRequest>
{
  static const char* value()
  {
    return DataType< ::plc_in::inputs >::value();
  }
  static const char* value(const ::plc_in::inputsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::plc_in::inputsResponse> should match 
// service_traits::MD5Sum< ::plc_in::inputs > 
template<>
struct MD5Sum< ::plc_in::inputsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::plc_in::inputs >::value();
  }
  static const char* value(const ::plc_in::inputsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::plc_in::inputsResponse> should match 
// service_traits::DataType< ::plc_in::inputs > 
template<>
struct DataType< ::plc_in::inputsResponse>
{
  static const char* value()
  {
    return DataType< ::plc_in::inputs >::value();
  }
  static const char* value(const ::plc_in::inputsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLC_IN_MESSAGE_INPUTS_H
